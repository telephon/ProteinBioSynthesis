{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red191\green0\blue0;\red96\green96\blue96;\red0\green0\blue191;
\red0\green115\blue0;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 \
\
\cf2 //_______\cf0 \
(\
g = \cf3 "atatatac"\cf0 ;\
\
b = \cf4 CodonPattern\cf0 (g, \cf4 inf\cf0 );\
c = \cf4 AminoacidPattern\cf0 (g, \cf4 inf\cf0 );\
\
t = b.asStream;\
u = c.asStream;\
12.do(\{ [ t.next, u.next].postln \});\
)\
\
\
\
\cf2 //______test with a little sequence\cf0 \
(\
\cf4 SynthDef\cf0 (\cf3 "amino"\cf0 , \{ \cf4 arg\cf0  out, freq=440, sustain=1.0, pan, p, amp=0.1;\
	\cf4 var\cf0  u;\
	u = \cf4 Line\cf0 .kr(1, 0, sustain, doneAction:2) * \
			\cf4 SinOsc\cf0 .ar(freq, \
				\cf4 SinOsc\cf0 .ar(freq * p, 0, \cf4 BrownNoise\cf0 .kr(pi/8))\
			);\
	\cf4 Out\cf0 .ar(out, \cf4 Pan2\cf0 .ar(u, pan, amp));\
\
\}).store;\
)\
\
(\
\cf4 var\cf0   pat;\
\
pat = \cf4 AminoacidPattern\cf0 (\cf3 "ggaacgggtactattatttattataaccagggc"\cf0 , \cf4 inf\cf0 , 0);\
\
\cf4 Pbind\cf0 (\
	\cf5 \\instrument\cf0 , \cf5 \\amino\cf0 ,\
	\cf5 \\degree\cf0 , pat,\
	\cf5 \\stepsPerOctave\cf0 , 24,\
	\cf5 \\dur\cf0 , 0.1,\
	\cf5 \\legato\cf0 , \cf4 Prand\cf0 ([0.3, 0.2, 0.8], \cf4 inf\cf0 )\
).play;\
\
)\
\
\
\cf2 //______mutation\cf0 \
(\
\cf4 var\cf0  string, list, pat;\
string = \cf3 "ggaacgggtactattatttattataaccagggc"\cf0 ;\
\cf2 //mutation by replacing a single nuclein acid by another:\cf0 \
\cf2 //list = Array.fill(4, \{ string = string.collect(\{ arg char; if(0.1.coin, \{ $T \}, \{char \})  \})  \});\cf0 \
\
\cf2 //mutation by adding a single nuclein acid:\cf0 \
list = \cf4 Array\cf0 .fill(4, \{ \cf4 var\cf0  s; s = \cf4 String\cf0 .new; string.size.do(\{ \cf4 arg\cf0  i; \
										s = s.add(string.at(i)); \
										if(0.1.coin, \{ s.add($t) \})   \
										\}); \
							string = s  \
				\});\
\
list = list.collect(\{ \cf4 arg\cf0  item; \cf4 AminoacidPattern\cf0 (item, 4, 0) \});\
\
pat = \cf4 Pseq\cf0 (list, \cf4 inf\cf0 );\
\
\cf4 Pbind\cf0 (\
	\cf5 \\instrument\cf0 , \cf5 \\amino\cf0 ,\
	\cf5 \\degree\cf0 , pat,\
	\cf5 \\stepsPerOctave\cf0 , 24,\
	\cf5 \\dur\cf0 , 0.1,\
	\cf5 \\legato\cf0 , \cf4 Prand\cf0 ([0.1, 0.2, 0.3], \cf4 inf\cf0 )\
).play;\
\
)\
\
\
\cf2 //_______opening a gene file\cf0 \
(\
\cf4 File\cf0 .openDialog(\cf3 "load genome file"\cf0 , \{ \cf4 arg\cf0  path;\
	x = \cf4 AminoacidPattern\cf0 .new.loadData(path); \
\});\
)\
\
\
(\
\cf4 Pbind\cf0 (\
	\cf5 \\instrument\cf0 , \cf5 \\amino\cf0 ,\
	\cf5 \\degree\cf0 , x,\
	\cf5 \\stepsPerOctave\cf0 , 72,\
	\cf5 \\dur\cf0 , 0.1,\
	\cf5 \\legato\cf0 , 1.1,\
	\cf5 \\x\cf0 , 0.5,\
	\cf5 \\p\cf0 , 0.5\
).play;\
)\
\
\
\
\cf2 //_____genes you have to enyoy slowly\cf0 \
(\
\cf4 SynthDef\cf0 (\cf3 "amino"\cf0 , \{ \cf4 arg\cf0  out, freq=440, sustain=1.0, pan, p, amp=0.1;\
	\cf4 var\cf0  u;\
	u = \cf4 Line\cf0 .kr(1, 0, sustain, doneAction:2) * \
			\cf4 SinOsc\cf0 .ar(freq, \
				\cf4 SinOsc\cf0 .ar(freq * p, 0, \cf4 BrownNoise\cf0 .kr(pi/8))\
			);\
	\cf4 Out\cf0 .ar(out, \cf4 Pan2\cf0 .ar(u, pan, amp));\
\
\}).store;\
)\
\
(\
\cf4 File\cf0 .openDialog(\cf3 "load genome file"\cf0 , \{ \cf4 arg\cf0  path;\
	x = \cf4 AminoacidPattern\cf0 .new.loadData(path); \
\});\
)\
\
(\
\cf4 Pbind\cf0 (\
	\cf5 \\instrument\cf0 , \cf5 \\amino\cf0 ,\
	\cf5 \\degree\cf0 , x - 4 , \
	\cf5 \\stepsPerOctave\cf0 , 24,\
	\cf5 \\dur\cf0 , 0.13*3,\
	\cf5 \\p\cf0 , x / 20,\
	\cf5 \\legato\cf0 , \cf4 Prand\cf0 ([1, 0.5, 2], \cf4 inf\cf0 ) * 1.4,\
	\cf5 \\pan\cf0 , x / 10 - 1,\
	\cf5 \\amp\cf0 , \cf4 Pbrown\cf0 (0.01, 0.15, 0.05, \cf4 inf\cf0 )\
).play;\
)\
\
\
}